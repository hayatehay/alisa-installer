#!/bin/bash

# Alisa Installer
#
# Copyright (c) 2023, Radio New Japan.
#
# Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions  are met:
# 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
# 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

VERSION="0.1"
DISTRONAME="Alisa Linux"
APPTITLE="${DISTRONAME} Installer ${VERSION}"

_setlocale(){
	langs=(
		"C" "aa_DJ" "aa_ER" "aa_ER@saaho" "aa_ET" "af_ZA" "agr_PE" "ak_GH" "am_ET" "an_ES" "anp_IN" "ar_AE"
		"ar_BH" "ar_DZ" "ar_EG" "ar_IN" "ar_IQ" "ar_JO" "ar_KW" "ar_LB" "ar_LY" "ar_MA" "ar_OM" "ar_QA" "ar_SA"
		"ar_SD" "ar_SS" "ar_SY" "ar_TN" "ar_YE" "ayc_PE" "az_AZ" "az_IR" "as_IN" "ast_ES" "be_BY" "be_BY@latin"
		"bem_ZM" "ber_DZ" "ber_MA" "bg_BG" "bhb_IN" "bho_IN" "bho_NP" "bi_VU" "bn_BD" "bn_IN" "bo_CN" "bo_IN"
		"br_FR" "brx_IN" "bs_BA" "byn_ER" "ca_AD" "ca_ES" "ca_ES@valencia" "ca_FR" "ca_IT" "ce_RU" "chr_US"
		"ckb_IQ" "cmn_TW" "crh_UA" "cs_CZ" "csb_PL" "cv_RU" "cy_GB" "da_DK" "de_AT" "de_BE" "de_CH" "de_DE"
		"de_IT" "de_LI" "de_LU" "doi_IN" "dsb_DE" "dv_MV" "dz_BT" "el_GR" "el_CY" "en_AG" "en_AU" "en_BW"
		"en_CA" "en_DK" "en_GB" "en_HK" "en_IE" "en_IL" "en_IN" "en_NG" "en_NZ" "en_PH" "en_SC" "en_SG" "en_US"
		"en_ZA" "en_ZM" "en_ZW" "eo" "es_AR" "es_BO" "es_CL" "es_CO" "es_CR" "es_CU" "es_DO" "es_EC" "es_ES"
		"es_GT" "es_HN" "es_MX" "es_NI" "es_PA" "es_PE" "es_PR" "es_PY" "es_SV" "es_US" "es_UY" "es_VE" "et_EE"
		"eu_ES" "fa_IR" "ff_SN" "fi_FI" "fil_PH" "fo_FO" "fr_BE" "fr_CA" "fr_CH" "fr_FR" "fr_LU" "fur_IT" "fy_NL"
		"fy_DE" "ga_IE" "gd_GB" "gez_ER" "gez_ER@abegede" "gez_ET" "gez_ET@abegede" "gl_ES" "gu_IN" "gv_GB" "ha_NG"
		"hak_TW" "he_IL" "hi_IN" "hif_FJ" "hne_IN" "hr_HR" "hsb_DE" "ht_HT" "hu_HU" "hy_AM" "ia_FR" "id_ID" "ig_NG"
		"ik_CA" "is_IS" "it_CH" "it_IT" "iu_CA" "ja_JP" "ka_GE" "kab_DZ" "kk_KZ" "kl_GL" "km_KH" "kn_IN" "ko_KR"
		"kok_IN" "ks_IN" "ks_IN@devanagari" "ku_TR" "kw_GB" "ky_KG" "lb_LU" "lg_UG" "li_BE" "li_NL" "lij_IT"
		"ln_CD" "lo_LA" "lt_LT" "lv_LV" "lzh_TW" "mag_IN" "mai_IN" "mai_NP" "mfe_MU" "mg_MG" "mhr_RU" "mi_NZ"
		"miq_NI" "mjw_IN" "mk_MK" "ml_IN" "mn_MN" "mni_IN" "mnw_MM" "mr_IN" "ms_MY" "mt_MT" "my_MM" "nan_TW"
		"nan_TW@latin" "nb_NO" "nds_DE" "nds_NL" "ne_NP" "nhn_MX" "niu_NU" "niu_NZ" "nl_AW" "nl_BE" "nl_NL"
		"nn_NO" "nr_ZA" "nso_ZA" "oc_FR" "om_ET" "om_KE" "or_IN" "os_RU" "pa_IN" "pa_PK" "pap_AW" "pap_CW"
		"pl_PL" "ps_AF" "pt_BR" "pt_PT" "quz_PE" "raj_IN" "rif_MA" "ro_RO" "ru_RU" "ru_UA" "rw_RW" "sa_IN" "sah_RU"
		"sat_IN" "sc_IT" "sd_IN" "sd_IN@devanagari" "se_NO" "sgs_LT" "shn_MM" "shs_CA" "si_LK" "sid_ET" "sk_SK"
		"sl_SI" "sm_WS" "so_DJ" "so_ET" "so_KE" "so_SO" "sq_AL" "sq_MK" "sr_ME" "sr_RS" "sr_RS@latin" "ss_ZA"
		"st_ZA" "sv_FI" "sv_SE" "sw_KE" "sw_TZ" "syr" "szl_PL" "ta_IN" "ta_LK" "tcy_IN" "te_IN" "tg_TJ" "th_TH"
		"the_NP" "ti_ER" "ti_ET" "tig_ER" "tk_TM" "tl_PH" "tn_ZA" "to_TO" "tpi_PG" "tr_CY" "tr_TR" "ts_ZA" "tt_RU"
		"tt_RU@iqtelif" "ug_CN" "uk_UA" "unm_US" "ur_IN" "ur_PK" "uz_UZ" "uz_UZ@cyrillic" "ve_ZA" "vi_VN" "wa_BE"
		"wae_CH" "wal_ET" "wo_SN" "xh_ZA" "yi_US" "yo_NG" "yue_HK" "yuw_PG" "zh_CN" "zh_HK" "zh_SG" "zh_TW" "zu_ZA"
	)
	opts=()
	IFSOLD=$IFS
	IFS=,
	for lang in ${langs[@]}; do
		opts+=("${lang}" "" "OFF")
	done
	IFS=$IFSOLD
	locale="$(whiptail --backtitle "${APPTITLE}" \
			   --title "Language Support" \
			   --checklist "" 20 35 14 \
			   "${opts[@]}" 3>&1 1>&2 2>&3)"
	if [ $? = 1 ]; then
		whiptail --backtitle "${APPTITLE}" \
			 --title "Abort Confirmation" \
			 --yesno "Are you really going to quit installation?" 0 0 0
		if [ "$?" = "1" ]; then
			_setlocale
		else
			exit 1
		fi
	fi
	return 0
}

_setkeymap(){
	keys="$(localectl list-keymaps | sed -z "s/\n/,/g")"
	opts=()
	IFSOLD=$IFS
	IFS=,
	for key in ${keys[@]}; do
		opts+=("${key}" "")
	done
	IFS=$IFSOLD
	keymap="$(whiptail --backtitle "${APPTITLE}" \
			   --title "Keyboard" \
			   --menu "" 20 50 14 \
			   "${opts[@]}" 3>&1 1>&2 2>&3)"
	loadkeys "${keymap}"
	if [ $? = 1 ]; then
		whiptail --backtitle "${APPTITLE}" \
			 --title "Abort Confirmation" \
			 --yesno "Are you really going to quit installation?" 0 0 0
		if [ "$?" = "1" ]; then
			_setkeymap
		else
			exit 1
		fi
	fi
	return 0
}

_netconn(){
	whiptail --backtitle "${APPTITLE}" \
		 --yesno "Configure network connection?" 0 0 0
	if [ "$?" = "1" ]; then
		:
	else
		 nmtui
	fi
}

_hostname(){
	hostname="$(whiptail --backtitle "${APPTITLE}" \
			     --title "Host name" \
			     --inputbox "This is the name of your computer on the network. You can use alphabets, numbers, and hyphens. The first character must be an alphabet and the last character can't be a hyphen or a period." \
			     10 50 alisalinux 3>&1 1>&2 2>&3)"
	if [ "$?" = "1" ]; then
		exit 0
	fi
	echo "${hostname}" | grep -e '^[-.0-9]' -e '[-.]$' -e '\s'
	if [ "$?" = "0" ]; then
		whiptail --title "Host name" \
			 --msgbox "Contains characters that can't be used." 0 0
		_hostname
	fi
	return 0
}

_timezone(){
	regions=(
		"UTC" "Africa" "America" "Atlantica" "Arctic" "Asia" "Atlantic" 
		"Australia" "Brazil" "Canada" "Chile" "Europe" "Indian" 
		"Mexico" "Pacific" "US"
	)
	opts=()
	for region in "${regions[@]}"; do
		opts+=("${region}" "")
	done
	timezone="$(whiptail --backtitle "${APPTITLE}" \
			     --title "Timezone" \
			     --menu "" --nocancel 20 35 14 \
			     "${opts[@]}" 3>&1 1>&2 2>&3)"
	
	if [ "${timezone}" != "UTC" ]; then
		cities="$(ls /usr/share/zoneinfo/${timezone} | sed -z "s/\n/,/g")"
		opts=()
		IFSOLD=$IFS
		IFS=,
		for city in ${cities[@]}; do
			opts+=("${city}" "")
		done
		IFS=$IFSOLD
		timezone="${timezone}/$(whiptail --backtitle "${APPTITLE}" \
				   --title "Timezone" \
				   --menu "" --nocancel 20 35 14 \
				   "${opts[@]}" 3>&1 1>&2 2>&3)"
	fi

	timezone="/usr/share/zoneinfo/"${timezone}""
	return 0
}

_diskpart(){
	drvs=$(lsblk -dpnl -o NAME,SIZE)
	opts=()
	IFSOLD=$IFS
	IFS=$'\n'
	for drv in ${drvs}; do
		opts+=("${drv}" "")
	done
	IFS=$IFSOLD
	drive=$(whiptail --backtitle "${APPTITLE}" \
			 --title "Installation Destinaton" \
			 --menu "Select installation destination drive" --nocancel 20 35 14 \
			 "${opts[@]}" 3>&1 1>&2 2>&3)
	cfdisk ${drive%%\ *}
	if [ "$?" != "0" ]; then
		whiptail --backtitle "${APPTITLE}" \
			 --title "Installation Destination" \
			 --msgbox "You seem to have selected a disable drive. Please select another one." 0 0
		_diskpart
	fi

	parts="$(lsblk ${drive%%\ *} -pnl -o NAME | grep [0-9])"
	formats=("Btrfs" "ext2" "ext3" "ext4" "FAT16" "FAT32")
	opts1=()
	opts2=()
	IFSOLD=$IFS
	IFS=,
	for part in ${parts}; do
		opts1+=("${part}")
	done
	IFS=$IFSOLD
	for format in ${formats[@]}; do
		opts2+=("${format}" "")
	done
	for part in ${opts1[@]}; do
		fs="$(whiptail --backtitle "${APPTITLE}" \
			       --title "Installation Destination" \
			       --menu "Select the format of "${part}"." --nocancel 0 0 0 \
			       "${opts2[@]}" 3>&1 1>&2 2>&3)"
		case ${fs} in
			"Btrfs")
				mkfs.btrfs -L "${fslabel}" "${part}"
				;;
			"ext2" | "ext3" | "ext4")
				mkfs.${fs} -L "${fslabel}" ${part}"
				;;
			"FAT16")
				mkfs.fat -F "${part}"
				fatlabel "${part}" ${fslabel}"
				;;
			"FAT32")
				mkfs.fat -F 32 "${part}"
				fatlabel "${part}" "${fslabel}"
				;;
		esac
		_pressanykey
	done
}

_rootpass(){
	rootpassword="$(whiptail --backtitle "${APPTITLE}" \
				 --title "Root Password" \
				 --passwordbox "Set the longest possible password using a mix of upper - and lower-case alphabets, numbers, and symbols.\n" \
				 --nocancel 13 50 3>&1 1>&2 2>&3)"
	rootpassconfirm="$(whiptail --backtitle "${APPTITLE}" \
				    --title "Root Password" \
				    --passwordbox "Enter again for confirmation.\n" \
				    --nocancel 13 50 3>&1 1>&2 2>&3)"
	if [ "${rootpassword}" != "${rootpassconfirm}" ]; then
		whiptail --backtitle "${APPTITLE}" \
			 --title "Root Password" \
			 --msgbox "Passwords don't match! Please try again." 0 0
		_rootpass
	fi
	return 0
}

_main(){
	whiptail --backtitle "${APPTITLE}" \
		 --title "Welcome to the Alisa Linux Installer!" \
		 --yesno "Select 'Continue' to install this OS, or 'Cancel' not to do." 10 50 10
	if [ "$?" = "1" ]; then
		exit 1
	fi
	_setlocale
	_setkeymap
	_netconn
	whiptail --backtitle "${APPTITLE}" \
		 --title "!!!WARNING!!!" \
		 --yesno "There is no going back from here on.\n Do you really want to install?" 0 0 0
	if [ "$?" = "1" ]; then
		exit 1
	else
		_hostname
		_timezone
		_diskpart
		_rootpass
	fi
}

_pressanykey(){
	_anykey=""
	echo "Done! Press any key..."
	read -n1 _anykey 
}

_main
exit 0

